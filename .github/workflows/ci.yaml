name: Build and Deploy Service

on:
  push:
    branches: [ main ]

jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout src
        uses: actions/checkout@v2
      - name: Set up go
        uses: actions/setup-go@v2
        with:
          go-version: ^1.19
      - name: Test
        run: go test -v ./...
      - name: Set up docker build 
        uses: docker/setup-buildx-action@v1
      - name: Login to docker hub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: fattfatt/mines-party-server:latest

  deploy:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Pull image and run docker via ssh
        uses: appleboy/ssh-action@master
        with: 
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd ~/mines-party-server
            git pull origin main
            cat << EOF > .env 
            PORT=${{ secrets.PORT }}
            SERVICE_NAME=${{ secrets.SERVICE_NAME }}
            CAPACITY=${{ secrets.CAPACITY }}
            S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }}
            S3_BUCKET=${{ secrets.S3_BUCKET }}
            S3_ENDPOINT=${{ secrets.S3_ENDPOINT }}
            S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }}
            IMGUR_API_BASE_URL=${{ secrets.IMGUR_API_BASE_URL }}
            IMGUR_CLIENT_ID=${{ secrets.IMGUR_CLIENT_ID }}
            EOF
            docker-compose pull --policy always
            docker-compose down
            docker-compose up -d


